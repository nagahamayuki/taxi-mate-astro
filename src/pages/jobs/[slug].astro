---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getJobsFromNotion, getJobByIdFromNotion } from '../../lib/notion.js';

export async function getStaticPaths() {
  const jobs = await getJobsFromNotion();

  return jobs.map((job) => {
    return {
      params: { slug: job.id },
    };
  });
}

const { slug } = Astro.params;
const job = await getJobByIdFromNotion(slug);

const pageTitle = `${job.title}｜タクシーメイト`;
const pageDescription = `${job.title}の求人情報です。タクシー業界を知り尽くしたキャリアアドバイザーがあなたの転職をサポートします。`;
const pageUrl = `https://taxi-mate.jp/jobs/${slug}/`;
---

<BaseLayout title={pageTitle} description={pageDescription} url={pageUrl}>
  <Fragment slot="head">
    <meta property="og:url" content={pageUrl} />
    <meta property="og:title" content={pageTitle} />
    <meta property="og:description" content={pageDescription} />
  </Fragment>

  <!-- ヘッダーセクション -->
  <div
    class="relative isolate overflow-hidden bg-gray-900 px-6 py-24 sm:py-32 lg:px-8"
  >
    <img
      src="/images/background4.jpg"
      alt="タクシーが走る背景画像"
      class="absolute inset-0 -z-10 size-full object-cover"
    />
    <div class="absolute inset-0 -z-10 bg-white/20 backdrop-blur-xs"></div>
    <div
      class="hidden sm:absolute sm:-top-10 sm:right-1/2 sm:-z-10 sm:mr-10 sm:block sm:transform-gpu sm:blur-3xl"
      aria-hidden="true"
    >
      <div
        class="aspect-1097/845 w-274.25 bg-linear-to-tr from-[#ff4694] to-[#776fff] opacity-20"
        style="clip-path: polygon(74.1% 44.1%, 100% 61.6%, 97.5% 26.9%, 85.5% 0.1%, 80.7% 2%, 72.5% 32.5%, 60.2% 62.4%, 52.4% 68.1%, 47.5% 58.3%, 45.2% 34.5%, 27.5% 76.7%, 0.1% 64.9%, 17.9% 100%, 27.6% 76.8%, 76.1% 97.7%, 74.1% 44.1%)"
      >
      </div>
    </div>
    <div
      class="absolute -top-52 left-1/2 -z-10 -translate-x-1/2 transform-gpu blur-3xl sm:top-[-28rem] sm:ml-16 sm:translate-x-0 sm:transform-gpu"
      aria-hidden="true"
    >
      <div
        class="aspect-1097/845 w-274.25 bg-linear-to-tr from-[#ff4694] to-[#776fff] opacity-20"
        style="clip-path: polygon(74.1% 44.1%, 100% 61.6%, 97.5% 26.9%, 85.5% 0.1%, 80.7% 2%, 72.5% 32.5%, 60.2% 62.4%, 52.4% 68.1%, 47.5% 58.3%, 45.2% 34.5%, 27.5% 76.7%, 0.1% 64.9%, 17.9% 100%, 27.6% 76.8%, 76.1% 97.7%, 74.1% 44.1%)"
      >
      </div>
    </div>
    <div class="mx-auto max-w-2xl text-center">
      <h2 class="text-5xl font-semibold tracking-tight text-white sm:text-7xl">
        {job.company}
      </h2>
      <p class="mt-8 text-lg font-medium text-pretty text-white sm:text-xl/8">
        {job.location}
      </p>
    </div>
  </div>

  <div class="bg-white">
    <div
      class="mx-auto max-w-2xl px-4 pt-16 pb-24 sm:px-6 lg:max-w-7xl lg:px-8"
    >
      <h1 class="text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl">
        {job.company}
      </h1>
      <div
        class="mt-12 lg:grid lg:grid-cols-12 lg:items-start lg:gap-x-12 xl:gap-x-16"
      >
        <section aria-labelledby="job-details-heading" class="lg:col-span-7">
          <h2 id="job-details-heading" class="sr-only">求人詳細</h2>
          <!-- 求人詳細 -->
          <div class="mt-6 border-b border-gray-100">
            <dl class="divide-y divide-gray-100">
              {
                job.company && (
                  <div class="px-4 py-6 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
                    <dt class="text-sm/6 font-medium text-gray-900">会社名</dt>
                    <dd class="mt-1 text-sm/6 text-gray-700 sm:col-span-2 sm:mt-0">
                      {job.company}
                    </dd>
                  </div>
                )
              }
              {
                job.headOffice && (
                  <div class="px-4 py-6 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
                    <dt class="text-sm/6 font-medium text-gray-900">本社</dt>
                    <dd class="mt-1 text-sm/6 text-gray-700 sm:col-span-2 sm:mt-0">
                      {job.headOffice}
                    </dd>
                  </div>
                )
              }
              {
                job.location && (
                  <div class="px-4 py-6 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
                    <dt class="text-sm/6 font-medium text-gray-900">営業所</dt>
                    <dd class="mt-1 text-sm/6 text-gray-700 sm:col-span-2 sm:mt-0">
                      {job.location}
                    </dd>
                  </div>
                )
              }
              {
                job.group && job.group.length > 0 && (
                  <div class="px-4 py-6 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
                    <dt class="text-sm/6 font-medium text-gray-900">
                      グループ
                    </dt>
                    <dd class="mt-1 text-sm/6 text-gray-700 sm:col-span-2 sm:mt-0">
                      {job.group.join(', ')}
                    </dd>
                  </div>
                )
              }
              {
                job.dispatchApps && job.dispatchApps.length > 0 && (
                  <div class="px-4 py-6 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
                    <dt class="text-sm/6 font-medium text-gray-900">
                      配車アプリ
                    </dt>
                    <dd class="mt-1 text-sm/6 text-gray-700 sm:col-span-2 sm:mt-0">
                      {job.dispatchApps.join(', ')}
                    </dd>
                  </div>
                )
              }
              {
                job.features && (
                  <div class="px-4 py-6 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
                    <dt class="text-sm/6 font-medium text-gray-900">特徴</dt>
                    <dd class="mt-1 text-sm/6 text-gray-700 sm:col-span-2 sm:mt-0">
                      {job.features}
                    </dd>
                  </div>
                )
              }
              {
                job.departureTime && (
                  <div class="px-4 py-6 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
                    <dt class="text-sm/6 font-medium text-gray-900">
                      出庫時間
                    </dt>
                    <dd class="mt-1 text-sm/6 text-gray-700 sm:col-span-2 sm:mt-0">
                      {job.departureTime}
                    </dd>
                  </div>
                )
              }
              {
                job.trainingPeriod && (
                  <div class="px-4 py-6 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
                    <dt class="text-sm/6 font-medium text-gray-900">
                      研修期間について
                    </dt>
                    <dd class="mt-1 text-sm/6 text-gray-700 sm:col-span-2 sm:mt-0">
                      {job.trainingPeriod}
                    </dd>
                  </div>
                )
              }
              {
                job.workingHours && (
                  <div class="px-4 py-6 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
                    <dt class="text-sm/6 font-medium text-gray-900">
                      隔勤の実働時間
                    </dt>
                    <dd class="mt-1 text-sm/6 text-gray-700 sm:col-span-2 sm:mt-0">
                      {job.workingHours}
                    </dd>
                  </div>
                )
              }
              {
                job.commuteMethods && job.commuteMethods.length > 0 && (
                  <div class="px-4 py-6 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
                    <dt class="text-sm/6 font-medium text-gray-900">
                      通勤手段
                    </dt>
                    <dd class="mt-1 text-sm/6 text-gray-700 sm:col-span-2 sm:mt-0">
                      {job.commuteMethods.join(', ')}
                    </dd>
                  </div>
                )
              }
              {
                job.salaryGuarantee && (
                  <div class="px-4 py-6 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
                    <dt class="text-sm/6 font-medium text-gray-900">
                      給与保証について
                    </dt>
                    <dd class="mt-1 text-sm/6 text-gray-700 sm:col-span-2 sm:mt-0">
                      {job.salaryGuarantee}
                    </dd>
                  </div>
                )
              }
            </dl>
          </div>
        </section>

        <!-- Order summary -->
        <section
          aria-labelledby="summary-heading"
          class="mt-16 rounded-lg bg-gray-50 px-4 py-6 sm:p-6 lg:col-span-5 lg:mt-0 lg:p-8"
        >
          <h2 id="summary-heading" class="text-lg font-medium text-gray-900">
            この求人に応募する
          </h2>
          <p class="mt-2 text-sm text-gray-600">
            下記のフォームからお問い合わせください。担当アドバイザーからご連絡いたします。
          </p>

          <form id="jobContactForm" class="mt-6">
            <div class="grid grid-cols-1 gap-x-8 gap-y-6">
              <div class="grid grid-cols-2 gap-x-8 gap-y-6">
                <div>
                  <label
                    for="last-name"
                    class="block text-sm/6 font-semibold text-gray-900"
                    >姓 <span class="text-red-500">*</span></label
                  >
                  <div class="mt-2.5">
                    <input
                      type="text"
                      name="last-name"
                      id="last-name"
                      required
                      class="block w-full rounded-md bg-white px-3.5 py-2 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600"
                    />
                  </div>
                </div>
                <div>
                  <label
                    for="first-name"
                    class="block text-sm/6 font-semibold text-gray-900"
                    >名 <span class="text-red-500">*</span></label
                  >
                  <div class="mt-2.5">
                    <input
                      type="text"
                      name="first-name"
                      id="first-name"
                      required
                      class="block w-full rounded-md bg-white px-3.5 py-2 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600"
                    />
                  </div>
                </div>
              </div>

              <div>
                <label
                  for="phone"
                  class="block text-sm/6 font-semibold text-gray-900"
                  >電話番号 <span class="text-red-500">*</span></label
                >
                <div class="mt-2.5">
                  <input
                    type="tel"
                    name="phone"
                    id="phone"
                    required
                    pattern="^(0[5-9]0[-(]?[0-9]{4}[-)]?[0-9]{4}|0120[-]?\d{1,3}[-]?\d{4}|050[-]?\d{4}[-]?\d{4}|0\d{1,3}[-]?\d{1,4}[-]?\d{4}|0570[-]?\d{1,4}[-]?\d{4})$"
                    placeholder="09012345678"
                    class="block w-full rounded-md bg-white px-3.5 py-2 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600"
                  />
                </div>
              </div>

              <div>
                <label
                  for="email"
                  class="block text-sm/6 font-semibold text-gray-900"
                  >メールアドレス</label
                >
                <div class="mt-2.5">
                  <input
                    type="email"
                    name="email"
                    id="email"
                    placeholder="example@example.com"
                    class="block w-full rounded-md bg-white px-3.5 py-2 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600"
                  />
                </div>
              </div>

              <div>
                <label
                  for="post_number"
                  class="block text-sm/6 font-semibold text-gray-900"
                  >郵便番号 <span class="text-red-500">*</span></label
                >
                <div class="mt-2.5">
                  <input
                    type="text"
                    name="post_number"
                    id="post_number"
                    required
                    pattern="[0-9]{7}"
                    placeholder="1100015"
                    inputmode="numeric"
                    class="block w-full rounded-md bg-white px-3.5 py-2 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600"
                  />
                </div>
              </div>

              <div>
                <label
                  for="age"
                  class="block text-sm/6 font-semibold text-gray-900"
                  >年代 <span class="text-red-500">*</span></label
                >
                <div class="mt-2.5">
                  <select
                    id="age"
                    name="age"
                    required
                    class="block w-full rounded-md bg-white px-3.5 py-2 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600"
                  >
                    <option value="">選択してください</option>
                    <option value="10代">10代</option>
                    <option value="20代">20代</option>
                    <option value="30代">30代</option>
                    <option value="40代">40代</option>
                    <option value="50代">50代</option>
                    <option value="60代">60代</option>
                    <option value="70代">70代</option>
                  </select>
                </div>
              </div>

              <div>
                <label
                  for="license"
                  class="block text-sm/6 font-semibold text-gray-900"
                  >保有している免許 <span class="text-red-500">*</span></label
                >
                <div class="mt-2.5">
                  <select
                    id="license"
                    name="license"
                    required
                    class="block w-full rounded-md bg-white px-3.5 py-2 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600"
                  >
                    <option value="">選択してください</option>
                    <option value="普通免許">普通免許</option>
                    <option value="二種免許">二種免許</option>
                    <option value="免許は持っていない"
                      >免許は持っていない</option
                    >
                  </select>
                </div>
              </div>
            </div>

            <div class="mt-10">
              <button
                type="submit"
                class="block w-full rounded-md bg-indigo-600 px-3.5 py-2.5 text-center text-sm font-semibold text-white shadow-xs hover:bg-indigo-500 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
                >この求人に応募する</button
              >
            </div>
            <p class="mt-4 text-sm/6 text-gray-500">
              <span class="text-red-500">*</span> は必須項目です
            </p>
          </form>
        </section>
      </div>
    </div>
  </div>
</BaseLayout>

<script
  define:vars={{
    jobId: job.id,
    jobCompany: job.company,
    webhookUrl: import.meta.env.MAKE_JOB_ENTRY_WEBHOOK_URL,
  }}
>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('jobContactForm');
    const phoneInput = document.getElementById('phone');

    // 電話番号の長さバリデーション関数
    function validatePhoneNumberLength(value) {
      // 数字以外を除去
      const numbers = value.replace(/\D/g, '');

      // 携帯電話（090, 080, 070, 060, 050）
      if (/^0[5-9]0/.test(numbers)) {
        return numbers.length === 11;
      }

      // IP電話（050）
      if (numbers.startsWith('050')) {
        return numbers.length === 11;
      }

      // フリーダイヤル（0120）
      if (numbers.startsWith('0120')) {
        return numbers.length >= 10 && numbers.length <= 11;
      }

      // ナビダイヤル（0570）
      if (numbers.startsWith('0570')) {
        return numbers.length >= 10 && numbers.length <= 11;
      }

      // 固定電話（市外局番）
      if (numbers.startsWith('0')) {
        return numbers.length >= 10 && numbers.length <= 11;
      }

      return false;
    }

    // 電話番号入力時のイベントハンドラ
    phoneInput.addEventListener('input', (e) => {
      const target = e.target;
      const numbers = target.value.replace(/\D/g, '');

      // 入力値が長すぎる場合は切り詰める
      if (numbers.length > 11) {
        target.value = numbers.slice(0, 11);
      }

      // バリデーションメッセージの表示
      const isValid = validatePhoneNumberLength(target.value);
      const errorMessage =
        target.parentElement?.querySelector('.error-message');

      if (!isValid && numbers.length > 0) {
        if (!errorMessage) {
          const message = document.createElement('p');
          message.className = 'error-message text-red-500 text-sm mt-1';
          message.textContent = '有効な電話番号を入力してください';
          target.parentElement?.appendChild(message);
        }
      } else if (errorMessage) {
        errorMessage.remove();
      }
    });

    if (!form) {
      console.error('Form element not found');
      return;
    }

    console.log('Form found, adding submit listener');

    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      console.log('Form submitted');

      // 電話番号のバリデーション
      const phoneValue = phoneInput.value;
      if (!validatePhoneNumberLength(phoneValue)) {
        alert('有効な電話番号を入力してください。');
        return;
      }

      const formData = new FormData(form);
      const data = {
        lastName: formData.get('last-name'),
        firstName: formData.get('first-name'),
        phone: formData.get('phone'),
        email: formData.get('email'),
        license: formData.get('license')?.toString().normalize('NFKC'),
        postNumber: formData.get('post_number'),
        age: formData.get('age'),
        jobId: jobId,
        jobCompany: jobCompany,
      };

      console.log('Sending form data:', data);

      try {
        console.log('Webhook URL:', webhookUrl);

        if (!webhookUrl) {
          throw new Error('MAKE_JOB_ENTRY_WEBHOOK_URL is not defined');
        }

        console.log('Sending request to webhook...');
        const response = await fetch(webhookUrl, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data),
        });

        console.log('Response status:', response.status);
        const responseText = await response.text();
        console.log('Response body:', responseText);

        if (!response.ok) {
          throw new Error(
            `Webhook request failed with status ${response.status}`,
          );
        }

        console.log('Form submitted successfully, redirecting...');
        window.location.href = '/jobs/thanks/';
      } catch (error) {
        console.error('Form submission error:', error);
        alert('送信に失敗しました。もう一度お試しください。');
      }
    });
  });
</script>

---
import BaseLayout from '../../layouts/BaseLayout.astro';
import Breadcrumb from '../../components/Breadcrumb.astro';

const pageUrl = 'https://taxi-mate.jp/contact/';
const pageTitle = 'メールで求人を受け取る';
const pageDescription =
  'タクシーメイトはタクシー業界専門の転職支援サービスです。厳選した月給45万円以上が目指せる会社のみを紹介。タクシー業界を知り尽くしたキャリアアドバイザーがあなたの転職をサポートします。';

// Add form handling
export const prerender = false;

// Handle form submission
export async function POST({ request }: { request: Request }) {
  try {
    const formData = await request.formData();
    const data = {
      lastName: formData.get('last-name'),
      firstName: formData.get('first-name'),
      phone: formData.get('phone'),
      email: formData.get('email'),
      license: formData.get('license'),
      postalCode: formData.get('postal-code'),
    };

    // Send to webhook
    const webhookUrl = import.meta.env.WEBHOOK_URL;
    if (!webhookUrl) {
      throw new Error('WEBHOOK_URL is not defined');
    }

    const response = await fetch(webhookUrl, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(data),
    });

    if (!response.ok) {
      throw new Error(`Webhook request failed with status ${response.status}`);
    }

    // Redirect to thank you page
    return new Response(null, {
      status: 302,
      headers: {
        Location: '/contact/thanks',
      },
    });
  } catch (error) {
    console.error('Form submission error:', error);
    // エラー時は同じページに戻す
    return new Response(null, {
      status: 302,
      headers: {
        Location: '/contact',
      },
    });
  }
}
---

<BaseLayout title={pageTitle} description={pageDescription} url={pageUrl}>
  <!-- ページ固有のhead要素 -->
  <Fragment slot="head">
    <meta property="og:url" content={pageUrl} />
    <meta property="og:title" content={pageTitle} />
    <meta property="og:description" content={pageDescription} />
  </Fragment>

  <!-- ヘッダーセクション -->
  <div class="relative isolate overflow-hidden bg-gray-900 py-24 sm:py-32">
    <img
      src="/images/background2.jpg"
      alt="タクシーメイトの背景画像"
      class="absolute inset-0 -z-10 size-full object-cover"
    />
    <div class="absolute inset-0 -z-10 bg-white/30 backdrop-blur-xs"></div>
    <div
      class="hidden sm:absolute sm:-top-10 sm:right-1/2 sm:-z-10 sm:mr-10 sm:block sm:transform-gpu sm:blur-3xl"
      aria-hidden="true"
    >
      <div
        class="aspect-1097/845 w-274.25 bg-linear-to-tr from-[#ff4694] to-[#776fff] opacity-20"
        style="clip-path: polygon(74.1% 44.1%, 100% 61.6%, 97.5% 26.9%, 85.5% 0.1%, 80.7% 2%, 72.5% 32.5%, 60.2% 62.4%, 52.4% 68.1%, 47.5% 58.3%, 45.2% 34.5%, 27.5% 76.7%, 0.1% 64.9%, 17.9% 100%, 27.6% 76.8%, 76.1% 97.7%, 74.1% 44.1%)"
      >
      </div>
    </div>
    <div
      class="absolute -top-52 left-1/2 -z-10 -translate-x-1/2 transform-gpu blur-3xl sm:top-[-28rem] sm:ml-16 sm:translate-x-0 sm:transform-gpu"
      aria-hidden="true"
    >
      <div
        class="aspect-1097/845 w-274.25 bg-linear-to-tr from-[#ff4694] to-[#776fff] opacity-20"
        style="clip-path: polygon(74.1% 44.1%, 100% 61.6%, 97.5% 26.9%, 85.5% 0.1%, 80.7% 2%, 72.5% 32.5%, 60.2% 62.4%, 52.4% 68.1%, 47.5% 58.3%, 45.2% 34.5%, 27.5% 76.7%, 0.1% 64.9%, 17.9% 100%, 27.6% 76.8%, 76.1% 97.7%, 74.1% 44.1%)"
      >
      </div>
    </div>
    <div class="mx-auto max-w-7xl px-6 lg:px-8">
      <div class="mx-auto max-w-2xl lg:mx-0">
        <h2
          class="text-5xl font-semibold tracking-tight text-gray-900 sm:text-7xl"
        >
          メールで求人を受け取る
        </h2>
        <p
          class="mt-8 text-lg font-medium text-pretty text-gray-700 sm:text-xl/8"
        >
          東京都内のタクシー会社を知り尽くした担当者が、条件にマッチしたまずは1社を紹介します。お問い合わせ後、土日、祝日、年末年始を除く1営業日以内にまずはメールにてご連絡させていただきます。
        </p>
      </div>
    </div>
  </div>

  <Breadcrumb pageName={pageTitle} />

  <!-- お問い合わせセクション -->
  <div class="relative isolate bg-white px-6 sm:py-16 lg:px-8">
    <svg
      class="absolute inset-0 -z-10 size-full mask-[radial-gradient(100%_100%_at_top_right,white,transparent)] stroke-gray-200"
      aria-hidden="true"
    >
      <defs>
        <pattern
          id="83fd4e5a-9d52-42fc-97b6-718e5d7ee527"
          width="200"
          height="200"
          x="50%"
          y="-64"
          patternUnits="userSpaceOnUse"
        >
          <path d="M100 200V.5M.5 .5H200" fill="none"></path>
        </pattern>
      </defs>
      <svg x="50%" y="-64" class="overflow-visible fill-gray-50">
        <path
          d="M-100.5 0h201v201h-201Z M699.5 0h201v201h-201Z M499.5 400h201v201h-201Z M299.5 800h201v201h-201Z"
          stroke-width="0"></path>
      </svg>
      <rect
        width="100%"
        height="100%"
        stroke-width="0"
        fill="url(#83fd4e5a-9d52-42fc-97b6-718e5d7ee527)"></rect>
    </svg>
    <div class="mx-auto max-w-xl lg:max-w-4xl">
      <h2
        class="text-4xl font-semibold tracking-tight text-pretty text-gray-900 sm:text-5xl"
      >
        メールで求人を受け取る
      </h2>
      <p class="mt-2 text-lg/8 text-gray-600">
        東京都内のタクシー会社を知り尽くした担当者が、条件にマッチしたまずは1社を紹介します。
      </p>
      <div class="mt-16 flex flex-col gap-16 sm:gap-y-20 lg:flex-row">
        <form id="contactForm" class="lg:flex-auto">
          <div class="grid grid-cols-1 gap-x-8 gap-y-6 sm:grid-cols-2">
            <div>
              <label
                for="last-name"
                class="block text-sm/6 font-semibold text-gray-900"
                >姓 <span class="text-red-500">*</span></label
              >
              <div class="mt-2.5">
                <input
                  type="text"
                  name="last-name"
                  id="last-name"
                  required
                  class="block w-full rounded-md bg-white px-3.5 py-2 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600"
                />
              </div>
            </div>
            <div>
              <label
                for="first-name"
                class="block text-sm/6 font-semibold text-gray-900"
                >名 <span class="text-red-500">*</span></label
              >
              <div class="mt-2.5">
                <input
                  type="text"
                  name="first-name"
                  id="first-name"
                  required
                  class="block w-full rounded-md bg-white px-3.5 py-2 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600"
                />
              </div>
            </div>
            <div>
              <label
                for="phone"
                class="block text-sm/6 font-semibold text-gray-900"
                >電話番号 <span class="text-red-500">*</span></label
              >
              <div class="mt-2.5">
                <input
                  type="tel"
                  name="phone"
                  id="phone"
                  required
                  pattern="[0-9\-]*"
                  placeholder="09012345678"
                  class="block w-full rounded-md bg-white px-3.5 py-2 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600"
                />
              </div>
            </div>
            <div>
              <label
                for="email"
                class="block text-sm/6 font-semibold text-gray-900"
                >メールアドレス</label
              >
              <div class="mt-2.5">
                <input
                  type="email"
                  name="email"
                  id="email"
                  class="block w-full rounded-md bg-white px-3.5 py-2 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600"
                />
              </div>
            </div>
            <div class="sm:col-span-2">
              <label
                for="license"
                class="block text-sm/6 font-semibold text-gray-900"
                >保有している免許</label
              >
              <div class="mt-2.5">
                <select
                  id="license"
                  name="license"
                  class="block w-full rounded-md bg-white px-3.5 py-2 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600"
                >
                  <option value="">選択してください</option>
                  <option value="regular">普通免許</option>
                  <option value="type2">二種免許</option>
                  <option value="none">免許は持っていない</option>
                </select>
              </div>
            </div>
            <div>
              <label
                for="postal-code"
                class="block text-sm/6 font-semibold text-gray-900"
                >郵便番号</label
              >
              <div class="mt-2.5">
                <input
                  type="text"
                  name="postal-code"
                  id="postal-code"
                  placeholder="123-4567"
                  class="block w-full rounded-md bg-white px-3.5 py-2 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600"
                />
              </div>
            </div>
          </div>
          <div class="mt-10">
            <button
              type="submit"
              class="block w-full rounded-md bg-indigo-600 px-3.5 py-2.5 text-center text-sm font-semibold text-white shadow-xs hover:bg-indigo-500 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
              >送信する</button
            >
          </div>
          <p class="mt-4 text-sm/6 text-gray-500">
            <span class="text-red-500">*</span> は必須項目です
          </p>
        </form>
        <div class="lg:mt-6 lg:w-80 lg:flex-none">
          <figure class="mt-10">
            <blockquote class="text-sm font-semibold text-gray-900">
              <p>
                "前職から比べて、月給15万円のアップに成功しました。
                タクシーメイトで転職支援を受けましたが、業界の説明から始まり、
                紹介先の会社の良いところも悪いところも正直に教えてくれたり、
                働き手の立場になって転職相談に乗ってくれたので非常に助かりました。"
              </p>
            </blockquote>
            <figcaption class="mt-4 flex items-center gap-x-3">
              <img
                src="/images/profile.jpg"
                alt=""
                class="size-18 flex-none rounded-full bg-gray-50"
              />
              <div class="flex flex-col gap-y-0.5">
                <div class="text-base font-semibold text-gray-900">
                  30代男性
                </div>
                <div class="text-sm/6 text-gray-600">前職：営業職</div>
              </div>
            </figcaption>
          </figure>
        </div>
      </div>
    </div>
  </div>
</BaseLayout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('contactForm');
    if (!form) {
      console.error('Form element not found');
      return;
    }

    console.log('Form found, adding submit listener');

    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      console.log('Form submitted');

      const formData = new FormData(form);
      const data = {
        lastName: formData.get('last-name'),
        firstName: formData.get('first-name'),
        phone: formData.get('phone'),
        email: formData.get('email'),
        license: formData.get('license'),
        postalCode: formData.get('postal-code'),
      };

      console.log('Sending form data:', data);

      try {
        const webhookUrl = import.meta.env.WEBHOOK_URL;
        console.log('Webhook URL:', webhookUrl);

        if (!webhookUrl) {
          throw new Error('WEBHOOK_URL is not defined');
        }

        console.log('Sending request to webhook...');
        const response = await fetch(webhookUrl, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data),
        });

        console.log('Response status:', response.status);
        const responseText = await response.text();
        console.log('Response body:', responseText);

        if (!response.ok) {
          throw new Error(
            `Webhook request failed with status ${response.status}`,
          );
        }

        console.log('Form submitted successfully, redirecting...');
        window.location.href = '/contact/thanks/';
      } catch (error) {
        console.error('Form submission error:', error);
        alert('送信に失敗しました。もう一度お試しください。');
      }
    });
  });
</script>
